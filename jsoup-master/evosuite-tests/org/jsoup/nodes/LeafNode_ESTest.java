/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 13 22:37:07 GMT 2024
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.DocumentType;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.TextNode;
import org.jsoup.nodes.XmlDeclaration;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LeafNode_ESTest extends LeafNode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DocumentType documentType0 = new DocumentType(".%s", ".%s", "~A+K'1pI}U];<,s/I");
      Document document0 = new Document("");
      documentType0.setParentNode(document0);
      String string0 = documentType0.baseUri();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DocumentType documentType0 = new DocumentType("YZ!L:2#!UwtxvC-'p", "U9&y", "", "YZ!L:2#!UwtxvC-'p", "");
      String string0 = documentType0.baseUri();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("8e/,9U#f", false);
      String string0 = xmlDeclaration0.attr("8e/,9U#f");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("t8u", false);
      xmlDeclaration0.setBaseUri("t8u");
      assertFalse(xmlDeclaration0.hasParent());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("8e/,9U#f", false);
      String string0 = xmlDeclaration0.absUrl("8e/,9U#f");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("z^i R@eI");
      // Undeclared exception!
      try { 
        cDataNode0.ensureChildNodes();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Leaf Nodes do not have child nodes.
         //
         verifyException("org.jsoup.nodes.LeafNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("", false);
      Node node0 = xmlDeclaration0.removeAttr("");
      assertFalse(node0.hasParent());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("tY};QB7O]e_sPDq%$");
      TextNode textNode0 = cDataNode0.splitText(0);
      assertEquals(0, textNode0.siblingIndex());
  }
}

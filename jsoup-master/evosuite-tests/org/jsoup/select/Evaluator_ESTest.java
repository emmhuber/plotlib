/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 13 21:37:54 GMT 2024
 */

package org.jsoup.select;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Tag;
import org.jsoup.select.CombiningEvaluator;
import org.jsoup.select.Elements;
import org.jsoup.select.Evaluator;
import org.jsoup.select.StructuralEvaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Evaluator_ESTest extends Evaluator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Evaluator.MatchText evaluator_MatchText0 = new Evaluator.MatchText();
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_MatchText0);
      Document document0 = Document.createShell("'N1");
      Element element0 = document0.body();
      element0.after("|L$c");
      boolean boolean0 = structuralEvaluator_Has0.matches(element0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Evaluator.MatchText evaluator_MatchText0 = new Evaluator.MatchText();
      Document document0 = new Document("4r\t4>/");
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("t-Q<QkpMx<x", parseSettings0);
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "4Q$}", attributes0);
      boolean boolean0 = evaluator_MatchText0.matches(document0, pseudoTextElement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Document document0 = Document.createShell("");
      Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
      boolean boolean0 = evaluator_IsEmpty0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Document document0 = Document.createShell("");
      document0.empty();
      Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
      boolean boolean0 = evaluator_IsEmpty0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Document document0 = Document.createShell(".%s");
      Element element0 = document0.head();
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      boolean boolean0 = evaluator_IsOnlyOfType0.matches(document0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Document document0 = Document.createShell("");
      document0.appendTo(document0);
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      boolean boolean0 = evaluator_IsOnlyOfType0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Document document0 = Document.createShell(".%s");
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      StructuralEvaluator.Not structuralEvaluator_Not0 = new StructuralEvaluator.Not(evaluator_IsOnlyOfType0);
      boolean boolean0 = structuralEvaluator_Not0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Document document0 = Document.createShell("#comment");
      Element element0 = document0.body();
      document0.appendTo(element0);
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      boolean boolean0 = evaluator_IsOnlyChild0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Document document0 = Document.createShell("#comment");
      Element element0 = document0.body();
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      boolean boolean0 = evaluator_IsOnlyChild0.matches(document0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Document document0 = Document.createShell("");
      Element element0 = document0.appendTo(document0);
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      boolean boolean0 = evaluator_IsOnlyChild0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      Document document0 = Document.createShell("u*|");
      boolean boolean0 = evaluator_IsOnlyChild0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Tag tag0 = Tag.valueOf(":contains(%s)");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "Nz+$,[y", attributes0);
      Element element0 = new Element(tag0, ":contains(%s)");
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      boolean boolean0 = evaluator_IsRoot0.matches(formElement0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      Document document0 = new Document("%Uy#]EmD):");
      // Undeclared exception!
      try { 
        evaluator_IsRoot0.matches(document0, document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Tag tag0 = Tag.valueOf(":contains(%s)");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "Nz+$,[y", attributes0);
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      boolean boolean0 = evaluator_IsRoot0.matches(formElement0, formElement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("*", parseSettings0);
      Document document0 = Document.createShell("#comment");
      Element element0 = document0.head();
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "*", attributes0);
      boolean boolean0 = evaluator_IsFirstChild0.matches(pseudoTextElement0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("*", parseSettings0);
      Document document0 = Document.createShell("#comment");
      Element element0 = document0.body();
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "*", attributes0);
      boolean boolean0 = evaluator_IsFirstChild0.matches(pseudoTextElement0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Document document0 = Document.createShell("");
      Element element0 = document0.appendTo(document0);
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      boolean boolean0 = evaluator_IsFirstChild0.matches(document0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Document document0 = Document.createShell("'");
      Tag tag0 = Tag.valueOf("xmlns:");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "xmlns:", attributes0);
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      boolean boolean0 = evaluator_IsFirstChild0.matches(document0, pseudoTextElement0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Document document0 = new Document("S r=GiAQ~mB&");
      Document document1 = document0.normalise();
      Element element0 = document1.head();
      Evaluator.IsNthLastOfType evaluator_IsNthLastOfType0 = new Evaluator.IsNthLastOfType(190, 190);
      int int0 = evaluator_IsNthLastOfType0.calculatePosition(document0, element0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Document document0 = Document.createShell("");
      Element element0 = document0.appendTo(document0);
      Evaluator.IsFirstOfType evaluator_IsFirstOfType0 = new Evaluator.IsFirstOfType();
      int int0 = evaluator_IsFirstOfType0.calculatePosition(element0, element0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Document document0 = Document.createShell("");
      Element element0 = document0.appendTo(document0);
      element0.empty();
      Evaluator.IsNthOfType evaluator_IsNthOfType0 = new Evaluator.IsNthOfType(0, (-48077992));
      int int0 = evaluator_IsNthOfType0.calculatePosition(element0, element0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild((-1), 0);
      String string0 = evaluator_IsNthChild0.toString();
      assertEquals(":nth-child(-1n)", string0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild(0, (-1));
      String string0 = evaluator_IsNthLastChild0.toString();
      assertEquals(":nth-last-child(-1)", string0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Evaluator.IsNthLastOfType evaluator_IsNthLastOfType0 = new Evaluator.IsNthLastOfType(5, (-1374));
      Document document0 = Document.createShell("org.jsoup.select.Evaluator$IsNthChild");
      Element element0 = document0.body();
      boolean boolean0 = evaluator_IsNthLastOfType0.matches(document0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Evaluator.IsNthLastOfType evaluator_IsNthLastOfType0 = new Evaluator.IsNthLastOfType((-2074), (-2074));
      Document document0 = Document.createShell("#comment");
      Element element0 = document0.body();
      StructuralEvaluator.Not structuralEvaluator_Not0 = new StructuralEvaluator.Not(evaluator_IsNthLastOfType0);
      boolean boolean0 = structuralEvaluator_Not0.matches(element0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Evaluator.IsNthLastOfType evaluator_IsNthLastOfType0 = new Evaluator.IsNthLastOfType(0, (-1405));
      Document document0 = Document.createShell("org.jsoup.select.Evaluator$IsNthChild");
      Element element0 = document0.body();
      boolean boolean0 = evaluator_IsNthLastOfType0.matches(document0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Evaluator.IsLastOfType evaluator_IsLastOfType0 = new Evaluator.IsLastOfType();
      Document document0 = Document.createShell("#comment");
      Element element0 = document0.body();
      StructuralEvaluator.Not structuralEvaluator_Not0 = new StructuralEvaluator.Not(evaluator_IsLastOfType0);
      boolean boolean0 = structuralEvaluator_Not0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Tag tag0 = Tag.valueOf("3ekKws')");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "3ekKws')", attributes0);
      Document document0 = new Document("W\"U1l6B>PPE-G");
      document0.appendChild(formElement0);
      Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild(0, (-1));
      boolean boolean0 = evaluator_IsNthLastChild0.matches(document0, formElement0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild((-44236554), (-44236554));
      Document document0 = Document.createShell("?@w+!XT`Q~?");
      Element element0 = document0.head();
      boolean boolean0 = evaluator_IsNthLastChild0.matches(document0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Document document0 = Document.createShell("'N1");
      Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild((-605), 3839);
      boolean boolean0 = evaluator_IsNthLastChild0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Document document0 = Document.createShell("'N1");
      Element element0 = document0.body();
      element0.after("|L$c");
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      boolean boolean0 = evaluator_IsLastChild0.matches(document0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Document document0 = Document.createShell("");
      Element element0 = document0.appendTo(document0);
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      boolean boolean0 = evaluator_IsLastChild0.matches(document0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Document document0 = Document.createShell("'N1");
      Element element0 = document0.body();
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      boolean boolean0 = evaluator_IsLastChild0.matches(document0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("'", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "gpp 70Nr@)cl4N", attributes0);
      boolean boolean0 = evaluator_IsLastChild0.matches((Element) null, formElement0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Evaluator.IndexEquals evaluator_IndexEquals0 = new Evaluator.IndexEquals(31);
      evaluator_IndexEquals0.index = 0;
      Document document0 = Document.createShell("");
      boolean boolean0 = evaluator_IndexEquals0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Document document0 = Document.createShell("'");
      Elements elements0 = document0.getElementsByIndexEquals(32768);
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Document document0 = Document.createShell("");
      Element element0 = document0.appendTo(document0);
      Evaluator.IndexGreaterThan evaluator_IndexGreaterThan0 = new Evaluator.IndexGreaterThan(0);
      boolean boolean0 = evaluator_IndexGreaterThan0.matches(element0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Document document0 = new Document("XxA$ou_Ma");
      Evaluator.IndexGreaterThan evaluator_IndexGreaterThan0 = new Evaluator.IndexGreaterThan(0);
      boolean boolean0 = evaluator_IndexGreaterThan0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Evaluator.IndexLessThan evaluator_IndexLessThan0 = new Evaluator.IndexLessThan(0);
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf(":only-child", parseSettings0);
      Element element0 = new Element(tag0, ":only-child");
      boolean boolean0 = evaluator_IndexLessThan0.matches((Element) null, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Document document0 = new Document("4r\t4>/");
      document0.normalise();
      Elements elements0 = document0.getElementsByIndexLessThan(30);
      assertEquals(3, elements0.size());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Evaluator.AttributeWithValueNot evaluator_AttributeWithValueNot0 = new Evaluator.AttributeWithValueNot("'K~Jaebw`:L'J", "'N1'");
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting("\"4r\t4>/", "\"4r\t4>/");
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining("[", "\"4r\t4>/\"");
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("6os$@JgJRRFVO@31YIAY", (-10384350));
      Evaluator.AttributeWithValueMatching evaluator_AttributeWithValueMatching0 = new Evaluator.AttributeWithValueMatching("InFrameset", pattern0);
      Tag tag0 = Tag.valueOf("InFrameset");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("InFrameset", true);
      FormElement formElement0 = new FormElement(tag0, "6os$@JgJRRFVO@31YIAY", attributes1);
      boolean boolean0 = evaluator_AttributeWithValueMatching0.matches(formElement0, formElement0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Document document0 = Document.createShell("?@w+!XT`Q~?");
      Elements elements0 = document0.getElementsByAttributeValueMatching("address", "org.jsoup.select.Evaluator$IndexEquals");
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Document document0 = new Document("4r\t4>/");
      Element element0 = document0.attr("4r\t4>/", "4Q$}");
      Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining("4r\t4>/", "4r\t4>/");
      boolean boolean0 = evaluator_AttributeWithValueContaining0.matches(document0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Document document0 = new Document("4r\t4>/");
      Element element0 = document0.attr("4r\t4>/", "4r\t4>/");
      Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining("4r\t4>/", "4r\t4>/");
      boolean boolean0 = evaluator_AttributeWithValueContaining0.matches(document0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining("atovc;'4", ":contains(%s)");
      Tag tag0 = Tag.valueOf(":contains(%s)");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "Nz+$,[y", attributes0);
      boolean boolean0 = evaluator_AttributeWithValueContaining0.matches(formElement0, formElement0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Document document0 = new Document("4r\t4>/");
      Element element0 = document0.attr("4r\t4>/", "4WIG}");
      Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding("4r\t4>/", "4WIG}");
      boolean boolean0 = evaluator_AttributeWithValueEnding0.matches(document0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("\"YTDB\txXX.Ag5`", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("**", "q c");
      FormElement formElement0 = new FormElement(tag0, "\"YTDB\txXX.Ag5`", attributes1);
      Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding("**", "**");
      boolean boolean0 = evaluator_AttributeWithValueEnding0.matches(formElement0, formElement0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Document document0 = new Document("O3");
      Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding("BetweenDoctypePublicAndSystemIdentifiers", "'kbd");
      boolean boolean0 = evaluator_AttributeWithValueEnding0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Document document0 = new Document("4r\t4>/");
      document0.attr("4r\t4>/", "4r\t4>/");
      Elements elements0 = document0.getElementsByAttributeValueStarting("4r\t4>/", "4r\t4>/");
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Document document0 = new Document("4r\t4>/");
      document0.attr("4r\t4>/", "4WIG}");
      Elements elements0 = document0.getElementsByAttributeValueStarting("4r\t4>/", "4r\t4>/");
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Document document0 = new Document("4r\t4>/");
      Elements elements0 = document0.getElementsByAttributeValueStarting("4r\t4>/", "4r\t4>/");
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Evaluator.AttributeWithValueNot evaluator_AttributeWithValueNot0 = new Evaluator.AttributeWithValueNot("US-ASCII", "US-ASCII");
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("\"YTDB\txXX.Ag5`", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "\"YTDB\txXX.Ag5`", attributes0);
      boolean boolean0 = evaluator_AttributeWithValueNot0.matches(formElement0, formElement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Document document0 = Document.createShell(".%s");
      Evaluator.AttributeWithValueNot evaluator_AttributeWithValueNot0 = new Evaluator.AttributeWithValueNot(".%s", "                    ");
      boolean boolean0 = evaluator_AttributeWithValueNot0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Tag tag0 = Tag.valueOf(",Ak(MMz>,nST9D$fL");
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = Attribute.createFromEncoded(",Ak(MMz>,nST9D$fL", ",Ak(MMz>,nST9D$fL");
      Attributes attributes1 = attributes0.put(attribute0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, ",Ak(MMz>,nST9D$fL", attributes1);
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue(",Ak(MMz>,nST9D$fL", "RawtextEndTagName");
      boolean boolean0 = evaluator_AttributeWithValue0.matches(pseudoTextElement0, pseudoTextElement0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Tag tag0 = Tag.valueOf(",Ak(MMz>,nST9D$fL");
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = Attribute.createFromEncoded(",Ak(MMz>,nST9D$fL", ",Ak(MMz>,nST9D$fL");
      Attributes attributes1 = attributes0.put(attribute0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, ",Ak(MMz>,nST9D$fL", attributes1);
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue(",Ak(MMz>,nST9D$fL", ",Ak(MMz>,nST9D$fL");
      boolean boolean0 = evaluator_AttributeWithValue0.matches(pseudoTextElement0, pseudoTextElement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Document document0 = Document.createShell(".%s");
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue("^", "95");
      boolean boolean0 = evaluator_AttributeWithValue0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("\"YTDB\txXX.Ag5`", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("**", "q c");
      FormElement formElement0 = new FormElement(tag0, "\"YTDB\txXX.Ag5`", attributes1);
      Evaluator.AttributeStarting evaluator_AttributeStarting0 = new Evaluator.AttributeStarting("**");
      boolean boolean0 = evaluator_AttributeStarting0.matches(formElement0, formElement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("\"YTDB\txXX.Ag5`", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("**", "q c");
      FormElement formElement0 = new FormElement(tag0, "\"YTDB\txXX.Ag5`", attributes1);
      Evaluator.AttributeStarting evaluator_AttributeStarting0 = new Evaluator.AttributeStarting("7");
      boolean boolean0 = evaluator_AttributeStarting0.matches(formElement0, formElement0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Evaluator.AllElements evaluator_AllElements0 = new Evaluator.AllElements();
      String string0 = evaluator_AllElements0.toString();
      assertEquals("*", string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Evaluator.IsFirstOfType evaluator_IsFirstOfType0 = new Evaluator.IsFirstOfType();
      Evaluator.IsLastOfType evaluator_IsLastOfType0 = new Evaluator.IsLastOfType();
      StructuralEvaluator.Parent structuralEvaluator_Parent0 = new StructuralEvaluator.Parent(evaluator_IsLastOfType0);
      Evaluator[] evaluatorArray0 = new Evaluator[5];
      evaluatorArray0[0] = (Evaluator) structuralEvaluator_Parent0;
      evaluatorArray0[1] = (Evaluator) evaluator_IsFirstOfType0;
      CombiningEvaluator.Or combiningEvaluator_Or0 = new CombiningEvaluator.Or(evaluatorArray0);
      String string0 = combiningEvaluator_Or0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining("xSTk.x6AF1rCf", "xSTk.x6AF1rCf");
      Evaluator[] evaluatorArray0 = new Evaluator[5];
      evaluatorArray0[0] = (Evaluator) evaluator_AttributeWithValueContaining0;
      evaluatorArray0[4] = (Evaluator) evaluator_AttributeWithValueContaining0;
      CombiningEvaluator.And combiningEvaluator_And0 = new CombiningEvaluator.And(evaluatorArray0);
      String string0 = combiningEvaluator_And0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Evaluator.Tag evaluator_Tag0 = new Evaluator.Tag((String) null);
      String string0 = evaluator_Tag0.toString();
      assertEquals("null", string0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Evaluator.ContainsOwnText evaluator_ContainsOwnText0 = new Evaluator.ContainsOwnText("");
      String string0 = evaluator_ContainsOwnText0.toString();
      assertEquals(":containsOwn()", string0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Element element0 = new Element("RAqNj1bO7D");
      Elements elements0 = element0.getElementsContainingOwnText("3Uj\"[iM");
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Evaluator.AttributeStarting evaluator_AttributeStarting0 = new Evaluator.AttributeStarting("b8 ]cL@*t7qMRL/?l");
      String string0 = evaluator_AttributeStarting0.toString();
      assertEquals("[^b8 ]cl@*t7qmrl/?l]", string0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      String string0 = evaluator_IsFirstChild0.toString();
      assertEquals(":first-child", string0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Evaluator.Attribute evaluator_Attribute0 = new Evaluator.Attribute("");
      String string0 = evaluator_Attribute0.toString();
      assertEquals("[]", string0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Evaluator.Attribute evaluator_Attribute0 = new Evaluator.Attribute("");
      Document document0 = Document.createShell("");
      boolean boolean0 = evaluator_Attribute0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Evaluator.TagEndsWith evaluator_TagEndsWith0 = new Evaluator.TagEndsWith("String must not be empty");
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_TagEndsWith0);
      String string0 = structuralEvaluator_Has0.toString();
      assertEquals(":has(String must not be empty)", string0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Evaluator.TagEndsWith evaluator_TagEndsWith0 = new Evaluator.TagEndsWith(":parent:last-of-type");
      Document document0 = new Document("abbr");
      boolean boolean0 = evaluator_TagEndsWith0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Evaluator.IsLastOfType evaluator_IsLastOfType0 = new Evaluator.IsLastOfType();
      StructuralEvaluator.Parent structuralEvaluator_Parent0 = new StructuralEvaluator.Parent(evaluator_IsLastOfType0);
      String string0 = structuralEvaluator_Parent0.toString();
      assertEquals(":parent:last-of-type", string0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Evaluator.IsNthLastOfType evaluator_IsNthLastOfType0 = new Evaluator.IsNthLastOfType(190, 190);
      String string0 = evaluator_IsNthLastOfType0.toString();
      assertEquals(":nth-last-of-type(190n+190)", string0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("");
      Evaluator.MatchesOwn evaluator_MatchesOwn0 = new Evaluator.MatchesOwn(pattern0);
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(evaluator_MatchesOwn0);
      String string0 = structuralEvaluator_PreviousSibling0.toString();
      assertEquals(":prev*:matchesOwn()", string0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("", 2);
      Document document0 = Document.createShell("");
      Evaluator.MatchesOwn evaluator_MatchesOwn0 = new Evaluator.MatchesOwn(pattern0);
      boolean boolean0 = evaluator_MatchesOwn0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      String string0 = evaluator_IsLastChild0.toString();
      assertEquals(":last-child", string0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Evaluator.IndexEquals evaluator_IndexEquals0 = new Evaluator.IndexEquals(31);
      String string0 = evaluator_IndexEquals0.toString();
      assertEquals(":eq(31)", string0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Document document0 = new Document("S r=GiAQ~mB&");
      Elements elements0 = document0.getElementsByClass("CkBH-Vg}fiAJ_^v");
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Evaluator.Class evaluator_Class0 = new Evaluator.Class("=Q5l7'o");
      String string0 = evaluator_Class0.toString();
      assertEquals(".=Q5l7'o", string0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Evaluator.Id evaluator_Id0 = new Evaluator.Id("");
      String string0 = evaluator_Id0.toString();
      assertEquals("#", string0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Evaluator.Id evaluator_Id0 = new Evaluator.Id("");
      Document document0 = Document.createShell("");
      boolean boolean0 = evaluator_Id0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Evaluator.ContainsData evaluator_ContainsData0 = new Evaluator.ContainsData("3Uj\"[iM");
      Element element0 = new Element("RAqNj1bO7D");
      boolean boolean0 = evaluator_ContainsData0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Evaluator.ContainsData evaluator_ContainsData0 = new Evaluator.ContainsData("s6");
      String string0 = evaluator_ContainsData0.toString();
      assertEquals(":containsData(s6)", string0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Evaluator.IsNthOfType evaluator_IsNthOfType0 = new Evaluator.IsNthOfType((-1060), (-1060));
      String string0 = evaluator_IsNthOfType0.toString();
      assertEquals(":nth-of-type(-1060n-1060)", string0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsRoot0);
      String string0 = structuralEvaluator_Has0.toString();
      assertEquals(":has(:root)", string0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Document document0 = new Document("xSTk.x6AF1rCf");
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild(60, 30);
      int int0 = evaluator_IsNthChild0.calculatePosition(document0, document0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      String string0 = evaluator_IsOnlyChild0.toString();
      assertEquals(":only-child", string0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Document document0 = Document.createShell("");
      Evaluator.ContainsText evaluator_ContainsText0 = new Evaluator.ContainsText(":eq(31)");
      boolean boolean0 = evaluator_ContainsText0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Evaluator.ContainsText evaluator_ContainsText0 = new Evaluator.ContainsText(":gt(190)");
      String string0 = evaluator_ContainsText0.toString();
      assertEquals(":contains(:gt(190))", string0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding(":matchText", ":matchText");
      String string0 = evaluator_AttributeWithValueEnding0.toString();
      assertEquals("[:matchtext$=:matchtext]", string0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("", 2);
      Evaluator.Matches evaluator_Matches0 = new Evaluator.Matches(pattern0);
      String string0 = evaluator_Matches0.toString();
      assertEquals(":matches()", string0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("", 2);
      Evaluator.Matches evaluator_Matches0 = new Evaluator.Matches(pattern0);
      Document document0 = Document.createShell("");
      boolean boolean0 = evaluator_Matches0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("-->");
      Evaluator.AttributeWithValueMatching evaluator_AttributeWithValueMatching0 = new Evaluator.AttributeWithValueMatching("org.jsoup.select.Evaluator$ContainsText", pattern0);
      String string0 = evaluator_AttributeWithValueMatching0.toString();
      assertEquals("[org.jsoup.select.evaluator$containstext~=-->]", string0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
      String string0 = evaluator_IsEmpty0.toString();
      assertEquals(":empty", string0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Evaluator.MatchText evaluator_MatchText0 = new Evaluator.MatchText();
      String string0 = evaluator_MatchText0.toString();
      assertEquals(":matchText", string0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      String string0 = evaluator_IsOnlyOfType0.toString();
      assertEquals(":only-of-type", string0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Evaluator.IndexGreaterThan evaluator_IndexGreaterThan0 = new Evaluator.IndexGreaterThan(0);
      String string0 = evaluator_IndexGreaterThan0.toString();
      assertEquals(":gt(0)", string0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Evaluator.AttributeWithValueNot evaluator_AttributeWithValueNot0 = new Evaluator.AttributeWithValueNot("#*E`", "#*E`");
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_AttributeWithValueNot0);
      String string0 = structuralEvaluator_Has0.toString();
      assertEquals(":has([#*e`!=#*e`])", string0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue("FdT|mNC%tV&^", "Y@[9*_");
      String string0 = evaluator_AttributeWithValue0.toString();
      assertEquals("[fdt|mnc%tv&^=y@[9*_]", string0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting("^vg$", "^vg$");
      String string0 = evaluator_AttributeWithValueStarting0.toString();
      assertEquals("[^vg$^=^vg$]", string0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Evaluator.IndexLessThan evaluator_IndexLessThan0 = new Evaluator.IndexLessThan(42);
      String string0 = evaluator_IndexLessThan0.toString();
      assertEquals(":lt(42)", string0);
  }
}

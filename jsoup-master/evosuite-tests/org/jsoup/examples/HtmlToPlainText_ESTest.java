/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 13 21:50:17 GMT 2024
 */

package org.jsoup.examples;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.examples.HtmlToPlainText;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.parser.Tag;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HtmlToPlainText_ESTest extends HtmlToPlainText_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HtmlToPlainText htmlToPlainText0 = new HtmlToPlainText();
      Document document0 = Document.createShell("h2");
      document0.appendTo(document0);
      document0.text("\np");
      // Undeclared exception!
      htmlToPlainText0.getPlainText(document0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HtmlToPlainText htmlToPlainText0 = new HtmlToPlainText();
      Document document0 = Document.createShell("h2");
      document0.appendText("MSS<rQ2j:Xs^b63MfC");
      Document document1 = document0.normalise();
      String string0 = htmlToPlainText0.getPlainText(document1);
      assertEquals("MSS<rQ2j:Xs^b63MfC ", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HtmlToPlainText htmlToPlainText0 = new HtmlToPlainText();
      Document document0 = new Document(" ");
      document0.appendText(" ");
      String string0 = htmlToPlainText0.getPlainText(document0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HtmlToPlainText htmlToPlainText0 = new HtmlToPlainText();
      Document document0 = new Document("GWsk @zGP7~GmK6)=& ");
      Document document1 = (Document)document0.appendText("GWsk @zGP7~GmK6)=& ");
      document1.normalise();
      String string0 = htmlToPlainText0.getPlainText(document0);
      assertEquals("GWsk @zGP7~GmK6)=& ", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HtmlToPlainText htmlToPlainText0 = new HtmlToPlainText();
      Document document0 = new Document("a");
      Element element0 = document0.createElement("a");
      String string0 = htmlToPlainText0.getPlainText(element0);
      assertEquals(" <>", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HtmlToPlainText htmlToPlainText0 = new HtmlToPlainText();
      Tag tag0 = Tag.valueOf("h2");
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "", attributes0);
      String string0 = htmlToPlainText0.getPlainText(element0);
      assertEquals("\n\n", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HtmlToPlainText htmlToPlainText0 = new HtmlToPlainText();
      Document document0 = Document.createShell("dt");
      Element element0 = document0.createElement("dt");
      String string0 = htmlToPlainText0.getPlainText(element0);
      assertEquals("  \n", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HtmlToPlainText htmlToPlainText0 = new HtmlToPlainText();
      Document document0 = Document.createShell("4VTaJwg)\fu>;f+n)");
      Element element0 = document0.createElement("li");
      htmlToPlainText0.getPlainText(element0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[2];
      // Undeclared exception!
      try { 
        HtmlToPlainText.main(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must supply a valid URL
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        HtmlToPlainText.main(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // usage: java -cp jsoup.jar org.jsoup.examples.HtmlToPlainText url [selector]
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        HtmlToPlainText.main(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must supply a valid URL
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
}
